@{
    ViewData["Title"] = "Profile";
}

<div class="container col-xxl-12 px-lg-4 px-2 py-5 dashboard">
    <div class="row">
        <!-- Sidebar -->
        @await Html.PartialAsync("_DashboardLayout")

        <!-- Main Content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex flex-column flex-md-row  align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h5 class="fw-bold mb-3 mb-md-0">PROFILE</h5>

            </div>
            <section class="content">
                <div class="nav-align-top">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <button type="button" class="nav-link nav-link-tab active rounded-0" role="tab" data-bs-toggle="tab" data-bs-target="#navs-top-home" aria-controls="navs-top-home" aria-selected="true">BIO</button>
                        </li>
                        <li class="nav-item">
                            <button type="button" class="nav-link nav-link-tab rounded-0" role="tab" data-bs-toggle="tab" data-bs-target="#navs-top-profile" aria-controls="navs-top-profile" aria-selected="false">ADDRESS</button>
                        </li>
                        <li class="nav-item">
                            <button type="button" class="nav-link nav-link-tab rounded-0" role="tab" data-bs-toggle="tab" data-bs-target="#navs-top-messages" aria-controls="navs-top-messages" aria-selected="false">CHANGE PASSWORD</button>
                        </li>
                    </ul>
                    <div class="tab-content mt-4">
                        @await Html.PartialAsync("_TabBio")
                        @await Html.PartialAsync("_TabAddress")
                        @await Html.PartialAsync("_TabChangePassword")
                    </div>
                </div>

            </section>

        </main>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            function getUserId() {
                $.ajax({
                    url: '/Profile/GetUserId',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        console.log('User Id:', data.id);
                        $('#userNewId').val(data.id);
                        $('#emailAddress').val(data.email);
                        $('#fullName').val(data.userName);
                        $('#phone').val(data.phoneNumber);
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            }

            getUserId();

            $('#fullName, #birthdate, #phone').on('keyup change', function () {

                var input = $(this);
                var warning = input.closest('.row').find('.text-danger');

                input.removeClass('is-invalid');
                warning.addClass('d-none').text('');
            });
        });

        $(document).ready(function () {
            function getUserProfile() {
                $.ajax({
                    url: '/Profile/GetUserProfile',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $('#birthdate').val(data.birthDate);
                        $('#address').val(data.addressLine);
                        $('#city').val(data.city);
                        $('#province').val(data.province);
                        $('#city').val(data.city);
                        $('#state').val(data.state);
                        $('#zipCode').val(data.zipCode);

                        var trimmedGender = data.gender.trim();
                        var genderSelector = 'input[name="gender"][value="' + trimmedGender + '"]';
                        $(genderSelector).prop('checked', true).trigger('change');

                        $('#phone').val(data.phoneNumber);
                        $('input[name="newsletterSubscription"][value="' + data.IsSuscribed + '"]').prop('checked', true);
                    },
                    error: function (error) {
                        console.error('Error:', error);
                        document.getElementById('profileAlert').classList.remove('d-none');
                        document.getElementById('addressAlert').classList.remove('d-none');

                    }
                });
            }

            getUserProfile();
            checkAddress();
        });

        function validateForm() {
            var isValid = true;

            var fieldsToValidate = [
                { id: 'fullName', warning: 'Full Name is required.' },
                { id: 'birthdate', warning: 'Birth Date is required.' },
                { id: 'phone', warning: 'Phone is required.' }
            ];

            fieldsToValidate.forEach(function (field) {
                var input = $('#' + field.id);
                var warning = input.next('small');

                if (!input.val()) {
                    input.addClass('is-invalid');
                    warning.removeClass('d-none').text(field.warning);
                    isValid = false;
                } else {
                    input.removeClass('is-invalid');
                    warning.addClass('d-none').text('');
                }
            });
            var genderChecked = $('input[name="gender"]:checked').length > 0;
            var genderWarning = $('input[name="gender"]').closest('.form-check').siblings('small');

            if (!genderChecked) {
                genderWarning.removeClass('d-none').text('Gender is required.');
                isValid = false;
            } else {
                genderWarning.addClass('d-none').text('');
            }
        }

        $('#SaveBioBtn').click(function () {
            var userId = $('#userNewId').val(); // Ambil ID produk jika ada
            var profileData = {
                UserNewId: userId,
                FullName: $('#fullName').val(),
                BirthDate: $('#birthdate').val(),
                Gender: $('input[name="gender"]:checked').val(),
                PhoneNumber: $('#phone').val(),
                IsSuscribed: $('#newsletterSubscription').prop('checked')
            };

            $.ajax({
                url: '/Profile/Update',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(profileData),
                success: function (response) {
                    Swal.fire(
                        'Success!',
                        'Profile has been saved.',
                        'success'
                    );
                    setTimeout(function () {
                        location.reload();
                    }, 1500);
                },
                error: function (error) {
                    console.error('Error:', error.responseJSON.message);
                    // Handle error, e.g., show error message
                }
            });
        });

        $('#SaveAddressBtn').click(function () {
            var isValidAddress = validateAddressForm();

            if (isValidAddress) {
                var userId = $('#userNewId').val();

                var addressData = {
                    UserNewId: userId,
                    FullName: $('#fullName').val(),

                    AddressLine: $('#address').val(),
                    City: $('#city').val(),
                    State: $('#state').val(),
                    Province: $('#province').val(),
                    ZipCode: $('#zipCode').val()
                };
                $.ajax({
                    url: '/Profile/UpdateAddress',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(addressData),
                    success: function (response) {
                        Swal.fire(
                            'Success!',
                            'Address has been saved.',
                            'success'
                        );

                        setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    error: function (error) {
                        console.error('Error:', error.responseJSON.message);
                    }
                });
            }
        });

        function validateAddressForm() {
            var isValidAddress = true;

            var addressToValidate = [
                { id: 'address', warning: 'Address is required.' },
                { id: 'city', warning: 'City is required.' },
                { id: 'state', warning: 'State is required.' },
                { id: 'province', warning: 'Province is required.' },
                { id: 'zipCode', warning: 'ZipCode is required.' }
            ];

            addressToValidate.forEach(function (field) {
                var input = $('#' + field.id);
                var warning = input.next('small');

                if (!input.val()) {
                    input.addClass('is-invalid');
                    warning.removeClass('d-none').text(field.warning);
                    isValidAddress = false; // Fixed typo, should be isValidAddress instead of isValid
                } else {
                    input.removeClass('is-invalid');
                    warning.addClass('d-none').text('');
                }
            });

            return isValidAddress;
        }

        function checkAddress() {
            $.ajax({
                url: '/Profile/CheckAddress',
                type: 'GET',
                success: function (data) {
                    if (!data.isAddressComplete) {
                        $('#addressAlert').removeClass('d-none');
                    } else {
                        $('#addressAlert').addClass('d-none');
                    }
                }
            });
        }

    </script>
}